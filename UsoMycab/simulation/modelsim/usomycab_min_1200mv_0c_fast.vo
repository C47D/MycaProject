// Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 14.0.0 Build 200 06/17/2014 SJ Web Edition"

// DATE "09/02/2014 21:15:52"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module mux (
	s,
	i,
	z);
input 	[2:0] s;
input 	[5:0] i;
output 	z;

// Design Ports Information
// z	=>  Location: PIN_B4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i[5]	=>  Location: PIN_E6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i[4]	=>  Location: PIN_D3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[0]	=>  Location: PIN_D6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[1]	=>  Location: PIN_A2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i[2]	=>  Location: PIN_B5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i[1]	=>  Location: PIN_B3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i[0]	=>  Location: PIN_A3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// i[3]	=>  Location: PIN_A5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s[2]	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("usomycab_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \z~output_o ;
wire \i[1]~input_o ;
wire \s[1]~input_o ;
wire \i[0]~input_o ;
wire \s[0]~input_o ;
wire \Mux0~1_combout ;
wire \i[2]~input_o ;
wire \i[3]~input_o ;
wire \Mux0~2_combout ;
wire \s[2]~input_o ;
wire \i[5]~input_o ;
wire \i[4]~input_o ;
wire \Mux0~0_combout ;
wire \Mux0~3_combout ;


// Location: IOOBUF_X7_Y34_N2
cycloneive_io_obuf \z~output (
	.i(\Mux0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\z~output_o ),
	.obar());
// synopsys translate_off
defparam \z~output .bus_hold = "false";
defparam \z~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X3_Y34_N1
cycloneive_io_ibuf \i[1]~input (
	.i(i[1]),
	.ibar(gnd),
	.o(\i[1]~input_o ));
// synopsys translate_off
defparam \i[1]~input .bus_hold = "false";
defparam \i[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X7_Y34_N8
cycloneive_io_ibuf \s[1]~input (
	.i(s[1]),
	.ibar(gnd),
	.o(\s[1]~input_o ));
// synopsys translate_off
defparam \s[1]~input .bus_hold = "false";
defparam \s[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X7_Y34_N15
cycloneive_io_ibuf \i[0]~input (
	.i(i[0]),
	.ibar(gnd),
	.o(\i[0]~input_o ));
// synopsys translate_off
defparam \i[0]~input .bus_hold = "false";
defparam \i[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X9_Y34_N8
cycloneive_io_ibuf \s[0]~input (
	.i(s[0]),
	.ibar(gnd),
	.o(\s[0]~input_o ));
// synopsys translate_off
defparam \s[0]~input .bus_hold = "false";
defparam \s[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y33_N10
cycloneive_lcell_comb \Mux0~1 (
// Equation(s):
// \Mux0~1_combout  = (\s[1]~input_o  & (((\s[0]~input_o )))) # (!\s[1]~input_o  & ((\s[0]~input_o  & (\i[1]~input_o )) # (!\s[0]~input_o  & ((\i[0]~input_o )))))

	.dataa(\i[1]~input_o ),
	.datab(\s[1]~input_o ),
	.datac(\i[0]~input_o ),
	.datad(\s[0]~input_o ),
	.cin(gnd),
	.combout(\Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~1 .lut_mask = 16'hEE30;
defparam \Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X11_Y34_N1
cycloneive_io_ibuf \i[2]~input (
	.i(i[2]),
	.ibar(gnd),
	.o(\i[2]~input_o ));
// synopsys translate_off
defparam \i[2]~input .bus_hold = "false";
defparam \i[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y34_N22
cycloneive_io_ibuf \i[3]~input (
	.i(i[3]),
	.ibar(gnd),
	.o(\i[3]~input_o ));
// synopsys translate_off
defparam \i[3]~input .bus_hold = "false";
defparam \i[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y33_N12
cycloneive_lcell_comb \Mux0~2 (
// Equation(s):
// \Mux0~2_combout  = (\Mux0~1_combout  & (((\i[3]~input_o )) # (!\s[1]~input_o ))) # (!\Mux0~1_combout  & (\s[1]~input_o  & (\i[2]~input_o )))

	.dataa(\Mux0~1_combout ),
	.datab(\s[1]~input_o ),
	.datac(\i[2]~input_o ),
	.datad(\i[3]~input_o ),
	.cin(gnd),
	.combout(\Mux0~2_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~2 .lut_mask = 16'hEA62;
defparam \Mux0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N8
cycloneive_io_ibuf \s[2]~input (
	.i(s[2]),
	.ibar(gnd),
	.o(\s[2]~input_o ));
// synopsys translate_off
defparam \s[2]~input .bus_hold = "false";
defparam \s[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y34_N15
cycloneive_io_ibuf \i[5]~input (
	.i(i[5]),
	.ibar(gnd),
	.o(\i[5]~input_o ));
// synopsys translate_off
defparam \i[5]~input .bus_hold = "false";
defparam \i[5]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X1_Y34_N8
cycloneive_io_ibuf \i[4]~input (
	.i(i[4]),
	.ibar(gnd),
	.o(\i[4]~input_o ));
// synopsys translate_off
defparam \i[4]~input .bus_hold = "false";
defparam \i[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X8_Y33_N24
cycloneive_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (!\s[1]~input_o  & ((\s[0]~input_o  & (\i[5]~input_o )) # (!\s[0]~input_o  & ((\i[4]~input_o )))))

	.dataa(\i[5]~input_o ),
	.datab(\s[1]~input_o ),
	.datac(\i[4]~input_o ),
	.datad(\s[0]~input_o ),
	.cin(gnd),
	.combout(\Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = 16'h2230;
defparam \Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X8_Y33_N6
cycloneive_lcell_comb \Mux0~3 (
// Equation(s):
// \Mux0~3_combout  = (\s[2]~input_o  & ((\Mux0~0_combout ))) # (!\s[2]~input_o  & (\Mux0~2_combout ))

	.dataa(\Mux0~2_combout ),
	.datab(gnd),
	.datac(\s[2]~input_o ),
	.datad(\Mux0~0_combout ),
	.cin(gnd),
	.combout(\Mux0~3_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~3 .lut_mask = 16'hFA0A;
defparam \Mux0~3 .sum_lutc_input = "datac";
// synopsys translate_on

assign z = \z~output_o ;

endmodule
